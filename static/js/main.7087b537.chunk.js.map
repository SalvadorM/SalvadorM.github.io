{"version":3,"sources":["images/test.jpeg","images/tintu.png","images/porfolio.png","images/classhub.png","images/soccer.png","images/climate.png","images/kinect.jpeg","images/websiteicon.png","navbar/NavBar.js","landing/LandingScene.js","work-components/WorkScene.js","layout2/icons/sLetter.js","layout2/icons/mLetter.js","layout2/icons/IconLayout.js","files/landing.js","layout2/landing2/index.js","layout2/landing2/WrapperLanding.js","layout2/work-components2/WorkComponent.js","files/works.js","layout2/work-components2/WorkSceneTwo.js","layout2/work-components2/WrapperWork.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","window","scrollY","setState","scrolled","state","addEventListener","removeEventListener","navClass","react_default","a","createElement","className","react_router_dom","to","src","logo","alt","href","rel","target","Component","withRouter","SLetter","css","objectSpread","styles","width","height","id","style","data-name","xmlns","viewBox","points","d","transform","MLetter","IconLayout","bodyWidth","bodyHeight","logoCount","setDimentions","document","body","clientWidth","windowH","innerHeight","bodyH","clientHeight","_this2","setTimeout","_this$state","concat","logos","i","randPosX","Math","floor","random","randPosY","push","sLetter","key","position","top","left","mLetter","landing","langingPage","img","bgImg","LandingSceneTwo","e","welcomeHeight","offY","offX","documentElement","booleanSet","mobile","getElementById","offsetTop","pageInfo","imgStyle","messageCSS","WrapperLanding","IconLayout_IconLayout","landing2_LandingSceneTwo","WorkComponent","project","console","log","link","title","description","workProjects","project1","classHubPic","imgAlt","project2","tintuPic","project3","portfolioPic","project4","kinectPic","project5","soccerPic","project6","climatePic","WorkSceneTwo","renderProjects","proj","work_components2_WorkComponent","WrapperWork","WorkSceneTwo_WorkSceneTwo","App","navbar_NavBar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","basename","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7087b537.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.95481c3e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tintu.0f96495d.png\";","module.exports = __webpack_public_path__ + \"static/media/porfolio.4c6c2fc7.png\";","module.exports = __webpack_public_path__ + \"static/media/classhub.6bf6bc3a.png\";","module.exports = __webpack_public_path__ + \"static/media/soccer.c2366c72.png\";","module.exports = __webpack_public_path__ + \"static/media/climate.2eb387ea.png\";","module.exports = __webpack_public_path__ + \"static/media/kinect.4a301ff9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/websiteicon.8179130b.png\";","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\n\n//scss\nimport './styles/navbar.scss'\n\n//components \n// import { LinkText } from './components/linkText'\n\n//images\nimport logo from '../images/websiteicon.png'\n\nclass NavBar extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            scrolled: false,\n        }\n    }\n\n    componentDidMount(){\n        window.addEventListener('scroll', this.handleScroll )\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('scroll', this.handleScroll )\n    }\n\n    handleScroll = () => {\n        let isTop = window.scrollY\n\n        if(isTop > 100){\n            this.setState({ scrolled: true })\n        } else {\n            this.setState({ scrolled: false })\n        }\n\n    }\n\n    render(){\n\n        let { scrolled } = this.state\n\n        let navClass = (!scrolled)? 'nav' : 'nav scrolled'\n\n        return(\n\n            <div className={navClass}>\n                <div className=\"nav-container\">\n                    \n                    <div className=\"nav-logo-container\">\n                    <Link to=\"/\"><img src={logo} alt=\"logo\" /></Link>\n                    </div>\n                    \n                    <div className=\"nav-links\">\n\n                        <div className=\"link-container\">\n                            <Link to=\"/work\">Work</Link>\n                        </div> \n\n                        {/*\n\n                        <div className=\"link-container\">\n                            <Link to=\"/work2\">Work2</Link>\n                        </div>\n\n                        <div className=\"link-container\">\n                            <Link to=\"/layout2\">layout2</Link>\n                        </div> */}\n\n                        <div className=\"link-container\">\n                            <a href=\"https://github.com/SalvadorM\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>\n                        </div>\n\n                        <div className=\"link-container\">\n                            <a href=\"https://www.linkedin.com/in/salvador-munozcast/\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(NavBar)","import React, { Component } from 'react'\n\n//scss\nimport './styles/landing.scss'\n\n//images\nimport imgBG from '../images/test.jpeg'\n\nclass LandingScene extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <div className=\"landing-container\">\n                <div className=\"img-bg\"><img src={imgBG} alt=\"bg pic\" /></div>\n                <div className=\"jumbotron\">\n                    <div className=\"jumbo-info\">\n                        <a href=\"https://docs.google.com/document/d/18zfojTsrhx_k7-cFAclSVcuP9cCk1xB4cx0ZjvGamGs/edit?usp=sharing\" rel=\"noopener noreferrer\" target=\"_blank\"><h1 id=\"jumbo-title\">Salvador Munoz Castillo</h1></a>\n                        <div className=\"extra-info\">\n                            <h3 className=\"college-info\" >Hunter College, CUNY</h3>\n                            <p className=\"major-info\" >Bachelors of Arts in Media Studies | Minor: Computer Science </p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LandingScene","import React, { Component } from 'react'\n\n//images\nimport tintuBG from '../images/tintu.png'\nimport porfolioBG from '../images/porfolio.png'\nimport classhubBG from '../images/classhub.png'\nimport soccerBG from '../images/soccer.png'\nimport climateBG from '../images/climate.png'\nimport kinectBG from '../images/kinect.jpeg'\n\n\n//styles \nimport './styles/workscene.scss'\n\nclass WorkScene extends Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n\n            <div className=\"work-container\">\n\n                <div className=\"work-row\">\n\n                    <div className=\"work-img\">\n                        <img src={tintuBG} alt=\"tintu chat\" />\n                    </div>\n\n                    <div className=\"work-info\">\n                        <div className=\"info-container\">\n                        <a href=\"https://github.com/buhotech/Slide/tree/master/slide\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">Tintu Chat</h2></a>\n                            <p className=\"info-text\"> Chat application that matches users based on similar likes and user can send instant messages</p>\n                        </div>\n                    </div>\n\n                </div>  \n\n                <div className=\"work-row\">\n\n                    <div className=\"work-img\">\n                        <img src={porfolioBG} alt=\"tintu chat\" />\n                    </div>\n \n                    <div className=\"work-info\">\n                        <div className=\"info-container\">\n                        <a href=\"https://salvadormunoz.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">Porfolio Site</h2></a>\n                            <p className=\"info-text\">Previous porfolio site</p>\n                        </div>\n                    </div>\n\n                </div>  \n\n                <div className=\"work-row\">\n\n                    <div className=\"work-img\">\n                        <img src={classhubBG} alt=\"tintu chat\" />\n                    </div>\n \n                    <div className=\"work-info\">\n                        <div className=\"info-container\">\n                        <a href=\"https://classhub-hunter.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">ClassHub Mobile App</h2></a>\n                            <p className=\"info-text\">An application that lets you find and add classmates, post notes and comment!</p>\n                        </div>\n                    </div>\n\n                </div>  \n\n                <div className=\"work-row\">\n\n                    <div className=\"work-img\">\n                        <img src={soccerBG} alt=\"tintu chat\" />\n                    </div>\n\n                    <div className=\"work-info\">\n                        <div className=\"info-container\">\n                        <a href=\"https://github.com/SalvadorM/midterm-project--spring-2019--web-programming/tree/dev\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">Soccer Ball Game</h2></a>\n                            <p className=\"info-text\">An interactive application that uses p5.js library and ml5 poseNet()!</p>\n                        </div>\n                    </div>\n\n                </div>\n                \n                <div className=\"work-row\">\n\n                    <div className=\"work-img\">\n                        <img src={climateBG} alt=\"tintu chat\" />\n                    </div>\n\n                    <div className=\"work-info\">\n                        <div className=\"info-container\">\n                        <a href=\"https://github.com/collaborative-project-medp341/collab-project\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">The Climate Phenon</h2></a>\n                        <p className=\"info-text\">Collaborative web project that promotes climate change awareness!</p>\n                        </div>\n                    </div>\n\n                </div>  \n\n                <div className=\"work-row\"> \n                <div className=\"work-img\">\n                    <img src={kinectBG} alt=\"kinect\" />\n                </div>\n\n                <div className=\"work-info\">\n                    <div className=\"info-container\">\n                    <a href=\"https://iart.shashafeng.com/2018/11/20/location-sim/\" rel=\"noopener noreferrer\" target=\"_blank\"><h2 className=\"info-title\">Location Sim</h2></a>\n                    <p className=\"info-text\">Interactive installation using Max 8, Microsoft Kinect, and dp.kinect 2 Library!</p>\n                    </div>\n                </div>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default WorkScene","import React from 'react'\n\nconst SLetter = (props) => {\n    const css = {\n        ...props.styles,\n        width: '60px', \n        height: '60px',\n    }    \n    return (\n        <svg id=\"Layer_1\" style={css} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 134.45 155.68\">\n            <title>s-letter</title>\n            <polyline className=\"cls-1\" points=\"2.06 151.12 87.31 112.58 40.97 54.02 132.06 4.39\"/>\n            <path className=\"cls-1\" d=\"M-68.37-6.53\" transform=\"translate(-10.94 -2.88)\"/>\n            <path className=\"cls-1\" d=\"M88.32-74.25\" transform=\"translate(-10.94 -2.88)\"/>\n        </svg>\n    )\n}\n\nexport default SLetter","import React from 'react'\n\nconst MLetter = (props) => {\n    const css = {\n        ...props.styles,\n        width: '60px', \n        height: '60px',\n    }\n    return (\n<svg id=\"Layer_1\" style={css} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 159.27 48.06\">\n    <title>m-letter</title>\n    <polyline className=\"cls-1\" points=\"157.07 4.49 79.64 42.49 2.2 4.49\"/>\n</svg>\n    )\n}\n\nexport default MLetter","import React, { Component } from 'react'\n\n//import the SVGs\nimport SLetter  from '../icons/sLetter'\nimport MLetter  from '../icons/mLetter'\n\nexport default class IconLayout extends Component {\n    state = {\n        bodyWidth: 0,\n        bodyHeight: 0,\n        logoCount: 35,\n    }\n\n    componentDidMount() {\n        setTimeout(()=>{\n            this.setDimentions()\n        }, 200)\n    }\n\n    setDimentions = () => {\n        const bodyWidth = document.body.clientWidth\n\n        //height \n        const windowH = window.innerHeight\n        const bodyH = document.body.clientHeight\n        let bodyHeight =  ( windowH > bodyH ) ? windowH : bodyH\n        this.setState({\n            bodyWidth,\n            bodyHeight\n        })\n    }\n\n    render(){   \n        \n        const { bodyHeight, bodyWidth, logoCount } = this.state\n        const styles = {\n            height:`${bodyHeight}px`\n        }\n        let logos = []\n\n        for (let i = 0; i < logoCount; i++) {\n            const randPosX = Math.floor((Math.random()*bodyWidth));\n            const randPosY = Math.floor((Math.random()*bodyHeight));\n            if( (i % 2) === 0) {\n                logos.push(\n                    < SLetter key={i} styles={{position: 'absolute', top: `${randPosY}px`, left: `${randPosX}px`}} />\n                )\n            }else {\n                logos.push(\n                < MLetter key={i} styles={{position: 'absolute', top: `${randPosY}px`, left: `${randPosX}px`}} />\n                )\n            }\n        }\n\n        return(\n        <div className=\"logo-container\" style={styles}>\n            {logos}\n        </div>\n        )\n    }\n}","import bgImg from '../images/test.jpeg'\n\nexport const landing = {\n    langingPage: {\n        img: bgImg\n    }\n}","import React, { Component } from 'react'\n\n//styles\nimport '../styles/layout2.scss'\n\n//images\nimport { landing } from '../../files/landing'\n\n\nexport default class LandingSceneTwo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            welcomeHeight: 0, \n            booleanSet: false,\n            offY: 0,\n            mobile: 0,\n        }\n    }\n\n\n    componentDidMount() {\n        const welcomeHeight = document.getElementById('welcome-con')\n        const offX = document.documentElement.clientWidth\n        window.addEventListener('scroll', this.handleScroll)\n\n\n        this.setState({\n            welcomeHeight: welcomeHeight.offsetTop,\n            offX\n        })\n    }  \n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll)\n    }\n\n    handleScroll = (e) => {\n        const { welcomeHeight} = this.state\n\n        const offY = window.scrollY\n        const offX = document.documentElement.clientWidth\n        const offsetWelcomeY = welcomeHeight - offY + 100\n        const booleanSet = (offsetWelcomeY < offY ) ? true : false\n\n        this.setState({\n            booleanSet, offY, offX\n        })\n    }\n\n    render() {\n        const {offY, booleanSet, offX} = this.state\n        const pageInfo = landing.langingPage\n\n        const yCSS = offY * .3\n        const imgStyle = {\n            transform: `translate3d(0px, -${yCSS}px, 0px)`\n        }\n\n        let messageCSS = (booleanSet) ? 'message-content showText' : 'message-content hideText'\n        const smallScreenSize = 600\n        const setScreenSize = (offX < smallScreenSize) ? true : false\n\n        if(setScreenSize) {\n            messageCSS = 'message-content showText'\n        }\n\n        return(\n            <div \n                className=\"layout2-container\"\n            >\n\n                <div className=\"welcome-container\" id=\"welcome-con\">\n                    <div className=\"img-container\">\n                        <img className=\"img-src\" style={imgStyle} alt=\"background img of Salvador and a Project\" src={pageInfo.img} />\n                    </div>\n                </div>\n\n\n                <div className=\"bio text-center\">\n                    <div className=\"message-container\"><p className={messageCSS}>Hi I'm salvador Muñoz Castillo</p></div>\n                    {/* <div className=\"message-container\"><p className={messageCSS}></p></div> */}\n                    <div className=\"message-container\"><p className={messageCSS}>Graduated from Hunter College</p></div>\n                    <div className=\"message-container\"><p className={messageCSS}>BA: Media Studies</p></div>\n                    <div className=\"message-container\"><p className={messageCSS}>Minor: Computer Science</p></div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\n\n//import components\nimport IconLayout from '../icons/IconLayout'\nimport LandingSceneTwo from './index'\n\nconst WrapperLanding = () => {\n    return(\n        <div>\n            <IconLayout />\n            <LandingSceneTwo />\n        </div>\n    )\n}\n\nexport default WrapperLanding\n","import React from 'react'\n\nconst WorkComponent = (props) => {\n    const project = props.project\n    console.log(project)\n    return(\n        <div className=\"project-col\">\n\n            <div className=\"project-container\">\n                \n                <div className=\"title-con\"> <a href={project.link} className=\"project-title\" rel=\"noopener noreferrer\" target=\"_blank\">{project.title}</a> </div>\n                \n                <div className=\"side-con\">\n\n                    <div className=\"image-con\">\n                        <img className=\"image2\" src={project.img} />\n                    </div> \n\n                </div>\n\n                <div className=\"info-con\">\n                    <p className=\"info\">{project.description}</p>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default WorkComponent","import classHubPic from '../images/classhub.png'\nimport tintuPic from '../images/tintu.png'\nimport portfolioPic from '../images/porfolio.png'\nimport soccerPic from '../images/soccer.png'\nimport climatePic from '../images/climate.png'\nimport kinectPic from '../images/kinect.jpeg'\n\nexport const workProjects = {\n    project1: {\n        img: classHubPic,\n        imgAlt: 'classhub project screenshot',\n        title: 'ClassHub Web App',\n        description: 'An application that lets you find and add classmates, post, comment on notes and instant message friends',\n        link: 'https://classhub-hunter.herokuapp.com/',\n    },\n    project2: {\n        img: tintuPic,\n        imgAlt: 'Tintu Chat Mobile App',\n        title: 'Tintu Chat',\n        description: 'Chat application that matches users based on similar likes and user can send instant messages',\n        link: 'https://tintu-chat.herokuapp.com',\n    },\n    project3: {\n        img: portfolioPic,\n        imgAlt: 'Portfolio Chat Screenshoot',\n        title: 'Porfolio Site',\n        description: 'Previous porfolio site',\n        link: 'https://salvadormunoz.herokuapp.com/',\n    },\n    project4: {\n        img: kinectPic,\n        imgAlt: 'Kinect being used to display user in a background',\n        title: 'Location Sim',\n        description: 'Interactive installation using Max 8, Microsoft Kinect, and dp.kinect 2 Library!',\n        link: 'https://iart.shashafeng.com/2018/11/20/location-sim/',\n    },\n    project5: {\n        img: soccerPic,\n        imgAlt: 'Soccer Game Screenshot',\n        title: 'Soccer Ball Interactive Game',\n        description: 'An interactive application that uses p5.js library and ml5 poseNet()!',\n        link: 'https://github.com/SalvadorM/midterm-project--spring-2019--web-programming/tree/dev',\n    },\n    project6: {\n        img: climatePic,\n        imgAlt: 'Climate Phenon Screenshot',\n        title: 'The Climate Phenon',\n        description: 'Collaborative web project that promotes climate change awareness!',\n        link: 'ttps://github.com/collaborative-project-medp341/collab-project',\n    },\n}","import React, { Component } from 'react'\n\n//components\nimport WorkComponent from './WorkComponent'\n//pojects\nimport { workProjects } from '../../files/works'\n//scss \nimport '../styles/work2.scss'\n\nexport default class WorkSceneTwo extends Component {\n\n    state = {\n        workProjects: ''\n    }\n\n    componentDidMount(){\n        this.setState({\n            workProjects\n        })\n    }\n    render() {\n        const { workProjects } = this.state\n        let renderProjects = []\n\n        for (let proj in workProjects) {\n            let project = workProjects[proj]\n            renderProjects.push(\n                <WorkComponent project={project} key={proj}/>\n            )\n        }\n\n        return (\n        <div className=\"container\">\n            <div className=\"work2-container\">\n\n                <div className=\"work-flex-container\">\n                {renderProjects}\n                </div>\n\n            </div>\n        </div>\n        )\n    }\n}","import React from 'react'\n\n//import components\nimport IconLayout from '../icons/IconLayout'\nimport WorkSceneTwo from './WorkSceneTwo'\n\nconst WrapperWork = () => {\n    return(\n        <div>\n            <IconLayout />\n            < WorkSceneTwo />\n        </div>\n    )\n}\n\nexport default WrapperWork\n","import React from 'react';\n\n//router\nimport { Route, Switch } from 'react-router-dom'\n\n//components \nimport NavBar from './navbar/NavBar'\nimport LandingScene from './landing/LandingScene'\nimport WorkScene from './work-components/WorkScene'\nimport WrapperLanding from './layout2/landing2/WrapperLanding'\nimport WrapperWork from './layout2/work-components2/WrapperWork'\n\n//scss\nimport './styles/font.scss'\n\nfunction App() {\n\n  // return (\n  //   <div className=\"App\">\n  //     <NavBar />  \n  //     <Switch>\n  //       <Route exact path=\"/\" component={LandingScene} />\n  //       <Route exact path=\"/layout2\" component={WrapperLanding} />\n  //       <Route exact path=\"/work\" component={WorkScene}/>\n  //       <Route exact path=\"/work2\" component={WrapperWork}/>\n  //     </Switch>\n  //   </div>\n  // );\n\n  return (\n    <div className=\"App\">\n      <NavBar />  \n      <Switch>\n        <Route exact path=\"/\" component={WrapperLanding} />\n        <Route exact path=\"/work\" component={WrapperWork}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom'\n\n//styles global\nimport './styles/reset.scss'\n\nReactDOM.render(<HashRouter basename=\"/\"><App /></HashRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}